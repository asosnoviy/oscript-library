
#Использовать json
#Использовать logos

Перем мНастройки;
Перем мПутьФайлаНастроек;
Перем Лог;

Процедура УстановитьФайлНастроек(Знач Путь) Экспорт

	мПутьФайлаНастроек = Путь;
	мНастройки = Неопределено;

КонецПроцедуры

Функция Получить() Экспорт

	Если мНастройки = Неопределено Тогда
		Попытка
			ПрочитатьФайлНастроек();
		Исключение
			Лог.Отладка("Чтение файла настроек:
				|" + ОписаниеОшибки());
			УстановитьНастройкиПоУмолчанию();
		КонецПопытки;
	КонецЕсли;

	Возврат мНастройки;

КонецФункции

Процедура ПрочитатьФайлНастроек()

	Если Не ЗначениеЗаполнено(мПутьФайлаНастроек) Тогда
		ВызватьИсключение "Не установлен файл настроек";
	КонецЕсли;

	Текст = ПрочитатьФайл(мПутьФайлаНастроек);

	Чтение = Новый ПарсерJSON;
	Настройки = Чтение.ПрочитатьJSON(Текст,,,Истина);

	// TODO сделать конвертацию терминов json в русские свойства настроек
//	мНастройки = Новый Структура();
	// мНастройки.Вставить("Прокси",Настройки["Прокси"]);
	// Сообщить(Настройки);
	мНастройки = Настройки;
КонецПроцедуры

Функция ПрочитатьФайл(Знач Путь)

	Чтение = Новый ЧтениеТекста(Путь);
	Текст = Чтение.Прочитать();
	Чтение.Закрыть();

	Возврат Текст;

КонецФункции

Процедура СохранитьФайл(Знач Текст,Знач Путь)

	Запись = Новый ЗаписьТекста(Путь);
	Запись.ЗаписатьСтроку(Текст);
	Запись.Закрыть();

КонецПроцедуры

Процедура УстановитьНастройкиПоУмолчанию()
	мНастройки = Новый Структура;
	НастройкиПроксиПоУмолчанию = УстановитьНастройкиПроксиПроксиПоУмолчанию();
	мНастройки.Вставить("Прокси",НастройкиПроксиПоУмолчанию);
КонецПроцедуры

Функция УстановитьНастройкиПроксиПроксиПоУмолчанию()

	СтруктураПрокси = Новый Структура();
	СтруктураПрокси.Вставить("ИспользоватьПрокси", Ложь);
	СтруктураПрокси.Вставить("ПроксиПоУмолчанию", Ложь);
	СтруктураПрокси.Вставить("Сервер");
	СтруктураПрокси.Вставить("Порт");
	СтруктураПрокси.Вставить("Пользователь");
	СтруктураПрокси.Вставить("Пароль");

	Возврат СтруктураПрокси;
КонецФункции	

Процедура СохранитьНастройки(Знач Параметры) Экспорт
	УстановитьНастройкиПоУмолчанию();
	ЗаполнитьНастройкиИзПараметров(Параметры);
	Текст = СформироватьТекстНастроек(мНастройки);
	СохранитьФайл(Текст,мПутьФайлаНастроек);
КонецПроцедуры

Функция СформироватьТекстНастроек(Знач Настройки)
	ТекстНастроек = "";
	Json =  Новый ПарсерJSON;
	ТекстНастроек = Json.ЗаписатьJSON(Настройки);

	Возврат ТекстНастроек;
КонецФункции

Процедура ЗаполнитьНастройкиИзПараметров(знач ЗначенияПараметров)
	
	Если ЗначенияПараметров["-proxyusedefault"] <> Неопределено ИЛИ ЗначенияПараметров["-proxyserver"] <> Неопределено Тогда
		мНастройки.Прокси.ИспользоватьПрокси = Истина;
	КонецЕсли;

	Если ЗначенияПараметров["-proxyusedefault"] <> Неопределено Тогда
		мНастройки.Прокси.ПроксиПоУмолчанию = Истина;
	КонецЕсли;	
	Если ЗначенияПараметров["-proxyserver"] <> Неопределено Тогда
		мНастройки.Прокси.Сервер= ЗначенияПараметров["-s"];
	КонецЕсли;	
	Если ЗначенияПараметров["-proxyport"] <> Неопределено Тогда
		мНастройки.Прокси.Порт = ЗначенияПараметров["-p"];
	КонецЕсли;
	Если ЗначенияПараметров["-proxyuser"] <> Неопределено Тогда
		мНастройки.Прокси.Пользователь = ЗначенияПараметров["-user"];
	КонецЕсли;	
		Если ЗначенияПараметров["-proxypass"] <> Неопределено Тогда
		мНастройки.Прокси.Пароль = ЗначенияПараметров["-pass"];
	КонецЕсли;	

КонецПроцедуры
//------------

Лог = Логирование.ПолучитьЛог("oscript.app.opm");